global [ packetsize, sdindex ]

to ul-power
	init-onboardleds
	redon
	wait 10
	redoff
	ul-init
	ul-go
end

to ul-init
	yellowon
	sd-clear-buffer
	setpacketsize 16
	setSD_Block_High 0
        setSD_Block_Low 0
	init-sd
	wait 10
	yellowoff
end

to ul-go
	greenon
	wait 10 
	greenoff
	;loop 
	;[
		collect-data
		
		

	;]
	cyan
end

to read-IR-sensor
	output readADC 0
end

to read-Optical-sensor
	output readADC 1
end

to collect-cycle :wait-time
	packet-word read-IR-sensor
	packet-word 0 ;Optical
	blueon 
	wait 1
	blueoff
	wait :wait-time
end


to collect-data
	init-packet 10
	repeat 1 [ collect-cycle 10 ]
	add-checksum
	write-packet-sd
	wait 5
	blueoff
end

to write-packet-sd
	setn 0
	repeat packetsize [
		writeb ($1500 + n ) (readb ($1fc0 + n))
		setn n + 1
	]
	SD-Log-Chunk $1500 packetsize
end

to examine
	sd-clear-buffer
	read-sd 0 0 
	packet-read-sd
end

to test
	ul-power
	repeat 32 [collect-data wait 1]
	examine
end

to packet-read-sd
	
   let [increment 0]

   repeat 32 [
	repeat 16 [
		print readb (:increment + SD_Buffer)  
		make "increment :increment + 1              
		mwait 100   
	]                         
	prs "_________
   ]

end
